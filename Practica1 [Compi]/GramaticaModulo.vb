'Generated by the GOLD Parser Builder

Option Explicit On
Option Strict Off

Imports System.IO
Imports System.Windows.Forms
Imports System.Globalization


Module MyParser
    Private Parser As New GOLD.Parser

    Private Enum SymbolIndex
        [Eof] = 0                                 ' (EOF)
        [Error] = 1                               ' (Error)
        [Comment] = 2                             ' Comment
        [Newline] = 3                             ' NewLine
        [Whitespace] = 4                          ' Whitespace
        [Timesdiv] = 5                            ' '*/'
        [Divtimes] = 6                            ' '/*'
        [Divdiv] = 7                              ' '//'
        [Minus] = 8                               ' '-'
        [Dollar] = 9                              ' '$'
        [Lparen] = 10                             ' '('
        [Rparen] = 11                             ' ')'
        [Times] = 12                              ' '*'
        [Comma] = 13                              ' ','
        [Div] = 14                                ' '/'
        [Lbracket] = 15                           ' '['
        [Rbracket] = 16                           ' ']'
        [Plus] = 17                               ' '+'
        [Eq] = 18                                 ' '='
        [Ataque] = 19                             ' ataque
        [Cadena] = 20                             ' cadena
        [Defensas] = 21                           ' defensas
        [Enemigos] = 22                           ' enemigos
        [Escenarios] = 23                         ' escenarios
        [Fin] = 24                                ' fin
        [Fondo] = 25                              ' fondo
        [Frecuencia] = 26                         ' frecuencia
        [Id] = 27                                 ' id
        [Imagen_defensa] = 28                     ' 'imagen_defensa'
        [Imagen_disparo] = 29                     ' 'imagen_disparo'
        [Imagen_enemigo] = 30                     ' 'imagen_enemigo'
        [Imagen_nave] = 31                        ' 'imagen_nave'
        [Inicio] = 32                             ' inicio
        [Naves] = 33                              ' naves
        [Nombre] = 34                             ' nombre
        [Numero] = 35                             ' numero
        [Proteccion] = 36                         ' proteccion
        [Punteo] = 37                             ' punteo
        [Sonido] = 38                             ' sonido
        [Sonido_disparo] = 39                     ' 'sonido_disparo'
        [Velocidad] = 40                          ' velocidad
        [Vida] = 41                               ' vida
        [Atenemigo] = 42                          ' <AtEnemigo>
        [Atributonav] = 43                        ' <AtributoNav>
        [Contenido] = 44                          ' <contenido>
        [Defensa] = 45                            ' <defensa>
        [Defensaat] = 46                          ' <DefensaAt>
        [E] = 47                                  ' <E>
        [Enemigo] = 48                            ' <enemigo>
        [Enemigoat] = 49                          ' <EnemigoAt>
        [Escatributo] = 50                        ' <EscAtributo>
        [Escenario] = 51                          ' <escenario>
        [F] = 52                                  ' <F>
        [Inicio2] = 53                            ' <inicio>
        [Navatributo] = 54                        ' <NavAtributo>
        [Nave] = 55                               ' <nave>
        [Op] = 56                                 ' <op>
        [Otroatenemigo] = 57                      ' <OtroAtEnemigo>
        [Otronavatributo] = 58                    ' <OtroNavAtributo>
        [S] = 59                                  ' <s>
        [T] = 60                                  ' <T>
    End Enum

    Private Enum ProductionIndex
        [Inicio] = 0                              ' <inicio> ::= <s>
        [S_Lbracket_Inicio_Div_Id_Rbracket] = 1   ' <s> ::= '[' inicio '/' id ']' <contenido>
        [Contenido] = 2                           ' <contenido> ::= <escenario> <contenido>
        [Contenido2] = 3                          ' <contenido> ::= <nave> <contenido>
        [Contenido3] = 4                          ' <contenido> ::= <defensa> <contenido>
        [Contenido4] = 5                          ' <contenido> ::= <enemigo> <contenido>
        [Contenido_Lbracket_Fin_Div_Id_Rbracket] = 6 ' <contenido> ::= '[' fin '/' id ']'
        [Escenario_Lbracket_Escenarios_Div_Id_Rbracket_Dollar] = 7 ' <escenario> ::= '[' escenarios '/' id ']' <EscAtributo> '$'
        [Escatributo_Fondo_Eq_Cadena_Comma_Sonido_Eq_Cadena] = 8 ' <EscAtributo> ::= fondo '=' cadena ',' sonido '=' cadena
        [Escatributo_Sonido_Eq_Cadena_Comma_Fondo_Eq_Cadena] = 9 ' <EscAtributo> ::= sonido '=' cadena ',' fondo '=' cadena
        [Nave_Lbracket_Naves_Div_Id_Rbracket] = 10 ' <nave> ::= '[' naves '/' id ']' <NavAtributo>
        [Navatributo] = 11                        ' <NavAtributo> ::= <AtributoNav> <OtroNavAtributo>
        [Otronavatributo_Comma] = 12              ' <OtroNavAtributo> ::= ',' <AtributoNav> <OtroNavAtributo>
        [Otronavatributo_Dollar] = 13             ' <OtroNavAtributo> ::= '$'
        [Atributonav_Imagen_nave_Eq_Cadena] = 14  ' <AtributoNav> ::= 'imagen_nave' '=' cadena
        [Atributonav_Imagen_disparo_Eq_Cadena] = 15 ' <AtributoNav> ::= 'imagen_disparo' '=' cadena
        [Atributonav_Sonido_disparo_Eq_Cadena] = 16 ' <AtributoNav> ::= 'sonido_disparo' '=' cadena
        [Atributonav_Vida_Eq] = 17                ' <AtributoNav> ::= vida '=' <op>
        [Atributonav_Ataque_Eq] = 18              ' <AtributoNav> ::= ataque '=' <op>
        [Defensa_Lbracket_Defensas_Div_Id_Rbracket_Dollar] = 19 ' <defensa> ::= '[' defensas '/' id ']' <DefensaAt> '$'
        [Defensaat_Imagen_defensa_Eq_Cadena_Comma_Proteccion_Eq] = 20 ' <DefensaAt> ::= 'imagen_defensa' '=' cadena ',' proteccion '=' <op>
        [Defensaat_Proteccion_Eq_Comma_Imagen_defensa_Eq_Cadena] = 21 ' <DefensaAt> ::= proteccion '=' <op> ',' 'imagen_defensa' '=' cadena
        [Enemigo_Lbracket_Enemigos_Div_Id_Rbracket] = 22 ' <enemigo> ::= '[' enemigos '/' id ']' <EnemigoAt>
        [Enemigoat] = 23                          ' <EnemigoAt> ::= <AtEnemigo> <OtroAtEnemigo>
        [Otroatenemigo_Comma] = 24                ' <OtroAtEnemigo> ::= ',' <AtEnemigo> <OtroAtEnemigo>
        [Otroatenemigo_Dollar] = 25               ' <OtroAtEnemigo> ::= '$'
        [Atenemigo_Nombre_Eq_Cadena] = 26         ' <AtEnemigo> ::= nombre '=' cadena
        [Atenemigo_Imagen_enemigo_Eq_Cadena] = 27 ' <AtEnemigo> ::= 'imagen_enemigo' '=' cadena
        [Atenemigo_Imagen_disparo_Eq_Cadena] = 28 ' <AtEnemigo> ::= 'imagen_disparo' '=' cadena
        [Atenemigo_Sonido_disparo_Eq_Cadena] = 29 ' <AtEnemigo> ::= 'sonido_disparo' '=' cadena
        [Atenemigo_Vida_Eq] = 30                  ' <AtEnemigo> ::= vida '=' <op>
        [Atenemigo_Ataque_Eq] = 31                ' <AtEnemigo> ::= ataque '=' <op>
        [Atenemigo_Frecuencia_Eq] = 32            ' <AtEnemigo> ::= frecuencia '=' <op>
        [Atenemigo_Velocidad_Eq] = 33             ' <AtEnemigo> ::= velocidad '=' <op>
        [Atenemigo_Punteo_Eq] = 34                ' <AtEnemigo> ::= punteo '=' <op>
        [Op] = 35                                 ' <op> ::= <E>
        [E_Plus] = 36                             ' <E> ::= <E> '+' <T>
        [E_Minus] = 37                            ' <E> ::= <E> '-' <T>
        [E] = 38                                  ' <E> ::= <T>
        [T_Times] = 39                            ' <T> ::= <T> '*' <F>
        [T_Div] = 40                              ' <T> ::= <T> '/' <F>
        [T] = 41                                  ' <T> ::= <F>
        [F_Numero] = 42                           ' <F> ::= numero
        [F_Lparen_Rparen] = 43                    ' <F> ::= '(' <E> ')'
    End Enum

    Public Program As Object 'You might derive a specific object
    'lista de valores numericos
    Public listaValores As New List(Of Integer)
    Public listaTipos As New List(Of String)
    'listas de escenarios
    Public listaEscFondo As New List(Of Object)
    Public listaEscSonido As New List(Of Object)
    'listas de naves
    Public listaNavImagen As New List(Of Object)
    Public listaNavImagDis As New List(Of Object)
    Public listaNavSoniDis As New List(Of Object)
    'listas de defensa
    Public listaDefImagen As New List(Of Object)
    'listas de enemigos
    Public listaEneNombre As New List(Of Object)
    Public listaEneImagen As New List(Of Object)
    Public listaEneImaDis As New List(Of Object)
    Public listaEneSonDis As New List(Of Object)



    Public Sub Setup()
        'This procedure can be called to load the parse tables. The class can
        'read tables using a BinaryReader.

        Parser.LoadTables(Path.Combine(Application.StartupPath, "GramaticaPractica1.egt"))
    End Sub

    Public Function Parse(ByVal Reader As TextReader) As Boolean
        'This procedure starts the GOLD Parser Engine and handles each of the
        'messages it returns. Each time a reduction is made, you can create new
        'custom object and reassign the .CurrentReduction property. Otherwise, 
        'the system will use the Reduction object that was returned.
        '
        'The resulting tree will be a pure representation of the language 
        'and will be ready to implement.

        Dim Response As GOLD.ParseMessage
        Dim Done As Boolean                  'Controls when we leave the loop
        Dim Accepted As Boolean = False      'Was the parse successful?

        Accepted = False    'Unless the program is accepted by the parser

        Parser.Open(Reader)
        Parser.TrimReductions = False  'Please read about this feature before enabling  

        Done = False
        Do Until Done
            Response = Parser.Parse()

            Select Case Response
                Case GOLD.ParseMessage.LexicalError
                    MessageBox.Show("Error Lexico en el archivo", "Error encontrado")
                    'Cannot recognize token
                    'Done = True
                    Parser.DiscardCurrentToken()

                Case GOLD.ParseMessage.SyntaxError
                    MessageBox.Show("Error Sintáctico en el archivo", "Error encontrado")
                    'Expecting a different token
                    Done = True
                    Parser.DiscardCurrentToken()

                Case GOLD.ParseMessage.Reduction
                    'Create a customized object to store the reduction
                    Parser.CurrentReduction = CreateNewObject(Parser.CurrentReduction)

                Case GOLD.ParseMessage.Accept
                    MessageBox.Show("Archivo sin errores")
                    'Accepted!
                    Program = Parser.CurrentReduction  'The root node!                 
                    Done = True
                    Accepted = True

                Case GOLD.ParseMessage.TokenRead
                    'You don't have to do anything here.

                Case GOLD.ParseMessage.InternalError
                    'INTERNAL ERROR! Something is horribly wrong.
                    Done = True

                Case GOLD.ParseMessage.NotLoadedError
                    'This error occurs if the CGT was not loaded.                   
                    Done = True

                Case GOLD.ParseMessage.GroupError
                    'COMMENT ERROR! Unexpected end of file
                    Done = True
            End Select
        Loop

        Return Accepted
    End Function

    Private Function CreateNewObject(Reduction As GOLD.Reduction) As Object
        Dim Result As Object = Nothing

        With Reduction
            Select Case .Parent.TableIndex
                Case ProductionIndex.Inicio
                    ' <inicio> ::= <s> 

                Case ProductionIndex.S_Lbracket_Inicio_Div_Id_Rbracket
                    ' <s> ::= '[' inicio '/' id ']' <contenido> 

                Case ProductionIndex.Contenido
                    ' <contenido> ::= <escenario> <contenido> 

                Case ProductionIndex.Contenido2
                    ' <contenido> ::= <nave> <contenido> 

                Case ProductionIndex.Contenido3
                    ' <contenido> ::= <defensa> <contenido> 

                Case ProductionIndex.Contenido4
                    ' <contenido> ::= <enemigo> <contenido> 

                Case ProductionIndex.Contenido_Lbracket_Fin_Div_Id_Rbracket
                    ' <contenido> ::= '[' fin '/' id ']' 

                Case ProductionIndex.Escenario_Lbracket_Escenarios_Div_Id_Rbracket_Dollar
                    ' <escenario> ::= '[' escenarios '/' id ']' <EscAtributo> '$' 

                Case ProductionIndex.Escatributo_Fondo_Eq_Cadena_Comma_Sonido_Eq_Cadena
                    ' <EscAtributo> ::= fondo '=' cadena ',' sonido '=' cadena 
                    'MessageBox.Show("fondo escenario " + .Item(2).Data + " sonido " + .Item(6).Data)
                    listaEscFondo.Add(.Item(2).Data)
                    listaEscSonido.Add(.Item(6).Data)

                Case ProductionIndex.Escatributo_Sonido_Eq_Cadena_Comma_Fondo_Eq_Cadena
                    ' <EscAtributo> ::= sonido '=' cadena ',' fondo '=' cadena 
                    listaEscSonido.Add(.Item(2).Data)
                    listaEscFondo.Add(.Item(6).Data)

                Case ProductionIndex.Nave_Lbracket_Naves_Div_Id_Rbracket
                    ' <nave> ::= '[' naves '/' id ']' <NavAtributo> 

                Case ProductionIndex.Navatributo
                    ' <NavAtributo> ::= <AtributoNav> <OtroNavAtributo> 

                Case ProductionIndex.Otronavatributo_Comma
                    ' <OtroNavAtributo> ::= ',' <AtributoNav> <OtroNavAtributo>

                Case ProductionIndex.Otronavatributo_Dollar
                    ' <OtroNavAtributo> ::= '$' 

                Case ProductionIndex.Atributonav_Imagen_nave_Eq_Cadena
                    ' <AtributoNav> ::= 'imagen_nave' '=' cadena 
                    listaNavImagen.Add(.Item(2).Data)
                    'MessageBox.Show("ruta imagen nave " + .Item(2).Data)

                Case ProductionIndex.Atributonav_Imagen_disparo_Eq_Cadena
                    ' <AtributoNav> ::= 'imagen_disparo' '=' cadena 
                    listaNavImagDis.Add(.Item(2).Data)
                    'MessageBox.Show("ruta imagen disparo nave " + .Item(2).Data)

                Case ProductionIndex.Atributonav_Sonido_disparo_Eq_Cadena
                    ' <AtributoNav> ::= 'sonido_disparo' '=' cadena
                    listaNavSoniDis.Add(.Item(2).Data)
                    'MessageBox.Show("ruta sonido disparo nave " + .Item(2).Data)

                Case ProductionIndex.Atributonav_Vida_Eq
                    ' <AtributoNav> ::= vida '=' <op>
                    listaTipos.Add("vidaNave")
                  '  MessageBox.Show("vida nave " + listaValores(listaTipos.Count - 1).ToString())

                Case ProductionIndex.Atributonav_Ataque_Eq
                    ' <AtributoNav> ::= ataque '=' <op> 
                    listaTipos.Add("ataqueNave")
                  '  MessageBox.Show("ataque nave " + listaValores(listaTipos.Count - 1).ToString())

                Case ProductionIndex.Defensa_Lbracket_Defensas_Div_Id_Rbracket_Dollar
                    ' <defensa> ::= '[' defensas '/' id ']' <DefensaAt> '$' 

                Case ProductionIndex.Defensaat_Imagen_defensa_Eq_Cadena_Comma_Proteccion_Eq
                    ' <DefensaAt> ::= 'imagen_defensa' '=' cadena ',' proteccion '=' <op> 
                    listaDefImagen.Add(.Item(2).Data)
                    listaTipos.Add("proteccionDefensa")
                   ' MessageBox.Show("proteccion nave" + listaValores(listaTipos.Count - 1).ToString())

                Case ProductionIndex.Defensaat_Proteccion_Eq_Comma_Imagen_defensa_Eq_Cadena
                    ' <DefensaAt> ::= proteccion '=' <op> ',' 'imagen_defensa' '=' cadena 
                    listaDefImagen.Add(.Item(6).Data)
                    listaTipos.Add("proteccionDefensa")
                   ' MessageBox.Show("proteccion nave " + listaValores(listaTipos.Count - 1).ToString())

                Case ProductionIndex.Enemigo_Lbracket_Enemigos_Div_Id_Rbracket
                    ' <enemigo> ::= '[' enemigos '/' id ']' <EnemigoAt> 

                Case ProductionIndex.Enemigoat
                    ' <EnemigoAt> ::= <AtEnemigo> <OtroAtEnemigo> 

                Case ProductionIndex.Otroatenemigo_Comma
                    ' <OtroAtEnemigo> ::= ',' <AtEnemigo> <OtroAtEnemigo> 

                Case ProductionIndex.Otroatenemigo_Dollar
                    ' <OtroAtEnemigo> ::= '$' 

                Case ProductionIndex.Atenemigo_Nombre_Eq_Cadena
                    ' <AtEnemigo> ::= nombre '=' cadena 
                    listaEneNombre.Add(.Item(2).Data)

                Case ProductionIndex.Atenemigo_Imagen_enemigo_Eq_Cadena
                    ' <AtEnemigo> ::= 'imagen_enemigo' '=' cadena 
                    listaEneImagen.Add(.Item(2).Data)

                Case ProductionIndex.Atenemigo_Imagen_disparo_Eq_Cadena
                    ' <AtEnemigo> ::= 'imagen_disparo' '=' cadena 
                    listaEneImaDis.Add(.Item(2).Data)

                Case ProductionIndex.Atenemigo_Sonido_disparo_Eq_Cadena
                    ' <AtEnemigo> ::= 'sonido_disparo' '=' cadena 
                    listaEneSonDis.Add(.Item(2).Data)

                Case ProductionIndex.Atenemigo_Vida_Eq
                    ' <AtEnemigo> ::= vida '=' <op> 
                    listaTipos.Add("vidaEnemigo")
                   ' MessageBox.Show("vida enemigo " + listaValores(listaTipos.Count - 1).ToString())

                Case ProductionIndex.Atenemigo_Ataque_Eq
                    ' <AtEnemigo> ::= ataque '=' <op> 
                    listaTipos.Add("ataqueEnemigo")
                  '  MessageBox.Show("vida enemigo " + listaValores(listaTipos.Count - 1).ToString())

                Case ProductionIndex.Atenemigo_Frecuencia_Eq
                    ' <AtEnemigo> ::= frecuencia '=' <op> 
                    listaTipos.Add("frecuenciaEnemigo")
                    'MessageBox.Show("frecuencia enemigo " + listaValores(listaTipos.Count - 1).ToString())

                Case ProductionIndex.Atenemigo_Velocidad_Eq
                    ' <AtEnemigo> ::= velocidad '=' <op> 
                    listaTipos.Add("velocidadEnemigo")
                    'MessageBox.Show("velocidad enemigo " + listaValores(listaTipos.Count - 1).ToString())

                Case ProductionIndex.Atenemigo_Punteo_Eq
                    ' <AtEnemigo> ::= punteo '=' <op> 
                    listaTipos.Add("punteoEnemigo")
                    'MessageBox.Show("punteo enemigo " + listaValores(listaTipos.Count - 1).ToString())

                Case ProductionIndex.Op
                    ' <op> ::= <E> 
                    listaValores.Add(.Item(0).Data)
                    'MessageBox.Show(" en lista de valores " + listaValores.Count.ToString() + " en tipo " + listaTipos.Count.ToString())
                    'MessageBox.Show("datos en lista " + listaValores.Count.ToString)

                Case ProductionIndex.E_Plus
                    ' <E> ::= <E> '+' <T> 
                    Dim resultado As New Integer
                    'MessageBox.Show("dato 1 " + .Item(0).Data.ToString + " dato 2 " + .Item(2).Data.ToString)
                    resultado = .Item(0).Data + .Item(2).Data
                    Result = resultado

                Case ProductionIndex.E_Minus
                    ' <E> ::= <E> '-' <T> 
                    Dim resultado As New Integer
                    resultado = .Item(0).Data - .Item(2).Data
                    Result = resultado

                Case ProductionIndex.E
                    ' <E> ::= <T> 
                    Result = .Item(0).Data

                Case ProductionIndex.T_Times
                    ' <T> ::= <T> '*' <F>
                    Dim resultado As New Integer
                    resultado = .Item(0).Data * .Item(2).Data
                    Result = resultado

                Case ProductionIndex.T_Div
                    ' <T> ::= <T> '/' <F> 
                    Dim resultado As New Integer
                    resultado = .Item(0).Data / .Item(2).Data
                    Result = resultado

                Case ProductionIndex.T
                    ' <T> ::= <F> 
                    Result = .Item(0).Data

                Case ProductionIndex.F_Numero
                    ' <F> ::= numero 
                    Dim numero = New Integer
                    numero = Integer.Parse(.Item(0).Data.ToString())
                    Result = numero

                Case ProductionIndex.F_Lparen_Rparen
                    ' <F> ::= '(' <E> ')' 
                    Result = .Item(1).Data

            End Select
        End With

        Return Result
    End Function

    Public Sub LimpiarCadenas()
        Dim cadena As String = ""
        'escenario fondo
        For iFE As Integer = 0 To listaEscFondo.Count - 1
            cadena = listaEscFondo.Item(iFE).ToString()
            cadena = Replace(cadena, " ", "")
            cadena = Replace(cadena, Chr(34), "")
            cadena = Replace(cadena, Chr(147), "")
            cadena = Replace(cadena, Chr(148), "")

            listaEscFondo.Item(iFE) = cadena
        Next
        'escenario sonido
        For iFE As Integer = 0 To listaEscSonido.Count - 1
            cadena = listaEscSonido.Item(iFE).ToString()
            cadena = Replace(cadena, " ", "")
            cadena = Replace(cadena, Chr(34), "")
            cadena = Replace(cadena, Chr(147), "")
            cadena = Replace(cadena, Chr(148), "")

            listaEscSonido.Item(iFE) = cadena
        Next
        'nave imagen
        For iFE As Integer = 0 To listaNavImagen.Count - 1
            cadena = listaNavImagen.Item(iFE).ToString()
            cadena = Replace(cadena, " ", "")
            cadena = Replace(cadena, Chr(34), "")
            cadena = Replace(cadena, Chr(147), "")
            cadena = Replace(cadena, Chr(148), "")

            listaNavImagen.Item(iFE) = cadena
        Next
        'nave disparo imagen
        For iFE As Integer = 0 To listaNavImagDis.Count - 1
            cadena = listaNavImagDis.Item(iFE).ToString()
            cadena = Replace(cadena, " ", "")
            cadena = Replace(cadena, Chr(34), "")
            cadena = Replace(cadena, Chr(147), "")
            cadena = Replace(cadena, Chr(148), "")

            listaNavImagDis.Item(iFE) = cadena
        Next
        'nave disparo sonido
        For iFE As Integer = 0 To listaNavSoniDis.Count - 1
            cadena = listaNavSoniDis.Item(iFE).ToString()
            cadena = Replace(cadena, " ", "")
            cadena = Replace(cadena, Chr(34), "")
            cadena = Replace(cadena, Chr(147), "")
            cadena = Replace(cadena, Chr(148), "")

            listaNavSoniDis.Item(iFE) = cadena
        Next
        'defensa imagen
        For iFE As Integer = 0 To listaDefImagen.Count - 1
            cadena = listaDefImagen.Item(iFE).ToString()
            cadena = Replace(cadena, " ", "")
            cadena = Replace(cadena, Chr(34), "")
            cadena = Replace(cadena, Chr(147), "")
            cadena = Replace(cadena, Chr(148), "")

            listaDefImagen.Item(iFE) = cadena
        Next
        'enemigo nombre
        For iFE As Integer = 0 To listaEneNombre.Count - 1
            cadena = listaEneNombre.Item(iFE).ToString()
            cadena = Replace(cadena, " ", "")
            cadena = Replace(cadena, Chr(34), "")
            cadena = Replace(cadena, Chr(147), "")
            cadena = Replace(cadena, Chr(148), "")

            listaEneNombre.Item(iFE) = cadena
        Next
        'enemigo imagen 
        For iFE As Integer = 0 To listaEneImagen.Count - 1
            cadena = listaEneImagen.Item(iFE).ToString()
            cadena = Replace(cadena, " ", "")
            cadena = Replace(cadena, Chr(34), "")
            cadena = Replace(cadena, Chr(147), "")
            cadena = Replace(cadena, Chr(148), "")

            listaEneImagen.Item(iFE) = cadena
        Next
        'enemigo imagen disparo
        For iFE As Integer = 0 To listaEneImaDis.Count - 1
            cadena = listaEneImaDis.Item(iFE).ToString()
            cadena = Replace(cadena, " ", "")
            cadena = Replace(cadena, Chr(34), "")
            cadena = Replace(cadena, Chr(147), "")
            cadena = Replace(cadena, Chr(148), "")

            listaEneImaDis.Item(iFE) = cadena
        Next
        'enemigo sonido disparo
        For iFE As Integer = 0 To listaEneSonDis.Count - 1
            cadena = listaEneSonDis.Item(iFE).ToString()
            cadena = Replace(cadena, " ", "")
            cadena = Replace(cadena, Chr(34), "")
            cadena = Replace(cadena, Chr(147), "")
            cadena = Replace(cadena, Chr(148), "")

            listaEneSonDis.Item(iFE) = cadena
        Next

    End Sub



End Module
